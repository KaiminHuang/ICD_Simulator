           /*********************************************************/
                           /*Proof Rule Declarations*/
                              /*Examiner GPL 2011*/
             /*Copyright (C) 2011 Altran Praxis Limited, Bath, U.K.*/
           /*********************************************************/


                        /*DATE : 31-MAY-2014 19:43:59.67*/

                          /*procedure ClosedLoop.On*/


rule_family on_rules:
     X      requires [X:any] &
     X <= Y requires [X:ire, Y:ire] &
     X >= Y requires [X:ire, Y:ire].

on_rules(1): integer__size >= 0 may_be_deduced.
on_rules(2): integer__first may_be_replaced_by -2147483648.
on_rules(3): integer__last may_be_replaced_by 2147483647.
on_rules(4): integer__base__first may_be_replaced_by -2147483648.
on_rules(5): integer__base__last may_be_replaced_by 2147483647.
on_rules(6): measures__joules__size >= 0 may_be_deduced.
on_rules(7): measures__joules__first may_be_replaced_by 0.
on_rules(8): measures__joules__last may_be_replaced_by 45.
on_rules(9): measures__joules__base__first may_be_replaced_by -2147483648.
on_rules(10): measures__joules__base__last may_be_replaced_by 2147483647.
on_rules(11): measures__bpm__size >= 0 may_be_deduced.
on_rules(12): measures__bpm__first may_be_replaced_by -1.
on_rules(13): measures__bpm__last may_be_replaced_by 300.
on_rules(14): measures__bpm__base__first may_be_replaced_by -2147483648.
on_rules(15): measures__bpm__base__last may_be_replaced_by 2147483647.
on_rules(16): measures__tub__size >= 0 may_be_deduced.
on_rules(17): measures__tub__first may_be_replaced_by 100.
on_rules(18): measures__tub__last may_be_replaced_by 150.
on_rules(19): measures__tub__base__first may_be_replaced_by -2147483648.
on_rules(20): measures__tub__base__last may_be_replaced_by 2147483647.
on_rules(21): measures__fub__size >= 0 may_be_deduced.
on_rules(22): measures__fub__first may_be_replaced_by 3.
on_rules(23): measures__fub__last may_be_replaced_by 15.
on_rules(24): measures__fub__base__first may_be_replaced_by -2147483648.
on_rules(25): measures__fub__base__last may_be_replaced_by 2147483647.
on_rules(26): heart__hearttype__size >= 0 may_be_deduced.
on_rules(27): A = B may_be_deduced_from
     [goal(checktype(A,heart__hearttype)),
      goal(checktype(B,heart__hearttype)),
      fld_rate(A) = fld_rate(B),
      fld_impulse(A) = fld_impulse(B),
      fld_defaultchange(A) = fld_defaultchange(B)].
on_rules(28): impulsegenerator__generatortype__size >= 0 may_be_deduced.
on_rules(29): A = B may_be_deduced_from
     [goal(checktype(A,impulsegenerator__generatortype)),
      goal(checktype(B,impulsegenerator__generatortype)),
      fld_impulse(A) = fld_impulse(B),
      fld_ison(A) = fld_ison(B)].
on_rules(30): hrm__hrmtype__size >= 0 may_be_deduced.
on_rules(31): A = B may_be_deduced_from
     [goal(checktype(A,hrm__hrmtype)),
      goal(checktype(B,hrm__hrmtype)),
      fld_rate(A) = fld_rate(B),
      fld_ison(A) = fld_ison(B)].
on_rules(32): icd__icdtype__size >= 0 may_be_deduced.
on_rules(33): A = B may_be_deduced_from
     [goal(checktype(A,icd__icdtype)),
      goal(checktype(B,icd__icdtype)),
      fld_rate(A) = fld_rate(B),
      fld_last6thrate(A) = fld_last6thrate(B),
      fld_last5thrate(A) = fld_last5thrate(B),
      fld_last4thrate(A) = fld_last4thrate(B),
      fld_last3rdrate(A) = fld_last3rdrate(B),
      fld_last2ndrate(A) = fld_last2ndrate(B),
      fld_last1strate(A) = fld_last1strate(B),
      fld_ison(A) = fld_ison(B),
      fld_tachycardiabound(A) = fld_tachycardiabound(B),
      fld_istachycardia(A) = fld_istachycardia(B),
      fld_isinimpulseprocess(A) = fld_isinimpulseprocess(B),
      fld_impulse(A) = fld_impulse(B),
      fld_impulserate(A) = fld_impulserate(B),
      fld_offset(A) = fld_offset(B),
      fld_ticktonextimpulse(A) = fld_ticktonextimpulse(B),
      fld_signal(A) = fld_signal(B),
      fld_fibrillationbound(A) = fld_fibrillationbound(B),
      fld_isfibrillation(A) = fld_isfibrillation(B),
      fld_abnormalnum(A) = fld_abnormalnum(B),
      fld_waitaftershock(A) = fld_waitaftershock(B),
      fld_iswait(A) = fld_iswait(B)].
on_rules(34): closedlooptype__size >= 0 may_be_deduced.
on_rules(35): A = B may_be_deduced_from
     [goal(checktype(A,closedlooptype)),
      goal(checktype(B,closedlooptype)),
      fld_hrt(A) = fld_hrt(B),
      fld_monitor(A) = fld_monitor(B),
      fld_generator(A) = fld_generator(B),
      fld_icds(A) = fld_icds(B),
      fld_ison(A) = fld_ison(B)].
